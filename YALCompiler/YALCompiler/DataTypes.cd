<?xml version="1.0" encoding="utf-8"?>
<ClassDiagram MajorVersion="1" MinorVersion="1">
  <Class Name="YALCompiler.DataTypes.Assignment">
    <Position X="24.5" Y="6.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAIAA=</HashCode>
      <FileName>DataTypes\Assignment.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.ASTNode">
    <Position X="28.25" Y="0.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAEQAAAAAAAAACAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\ASTNode.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.BinaryAssignment">
    <Position X="23.5" Y="8.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAA=</HashCode>
      <FileName>DataTypes\BinaryAssignment.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.Boolean">
    <Position X="34.25" Y="9.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAgAAAA=</HashCode>
      <FileName>DataTypes\Boolean.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.CompoundExpression">
    <Position X="36.5" Y="8" Width="1.75" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQCAAAAAIAA=</HashCode>
      <FileName>DataTypes\CompoundExpression.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.CompoundPredicate">
    <Position X="34.25" Y="11.5" Width="1.75" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACACAAAAAIAA=</HashCode>
      <FileName>DataTypes\CompoundPredicate.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.Else">
    <Position X="25" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\Else.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.ElseIf">
    <Position X="23" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\ElseIf.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.Expression">
    <Position X="34.25" Y="6.5" Width="1.5" />
    <InheritanceLine Type="YALCompiler.DataTypes.ASTNode" ManuallyRouted="true">
      <Path>
        <Point X="29" Y="1.988" />
        <Point X="29" Y="5.907" />
        <Point X="35" Y="5.907" />
        <Point X="35" Y="6.5" />
      </Path>
    </InheritanceLine>
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\Expression.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.ForStatement">
    <Position X="31.75" Y="3.75" Width="2" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAABAAAAAAAAEAAAAAAAAAAAAAAAAAAAgA=</HashCode>
      <FileName>DataTypes\ForStatement.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.Function">
    <Position X="34" Y="3.75" Width="1.75" />
    <TypeIdentifier>
      <HashCode>AAACAAABAAAAAAQAAAAAAAAAAAAAAAAAAAAAAIAEAAA=</HashCode>
      <FileName>DataTypes\Function.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.FunctionCall">
    <Position X="38.75" Y="8" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAACAQAAAAAAAIAAAAAAAAAAAAAQAAAAAA=</HashCode>
      <FileName>DataTypes\FunctionCall.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.Identifier">
    <Position X="27.5" Y="8" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAEAAAAAAAAgAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\Identifier.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.If">
    <Position X="21" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\If.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.IfStatement">
    <Position X="19" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\IfStatement.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.Predicate">
    <Position X="34.25" Y="8" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA=</HashCode>
      <FileName>DataTypes\Predicate.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.Program">
    <Position X="36.25" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\Program.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.ReturnStatement">
    <Position X="38.5" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\ReturnStatement.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.SignedNumber">
    <Position X="29.75" Y="8" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAgAAAAAAA=</HashCode>
      <FileName>DataTypes\SignedNumber.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.StatementBlock">
    <Position X="21" Y="6" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAABAAAAAA=</HashCode>
      <FileName>DataTypes\StatementBlock.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.StringLiteral">
    <Position X="32" Y="8" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAgAAAAAAA=</HashCode>
      <FileName>DataTypes\StringLiteral.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.TupleDeclaration">
    <Position X="27" Y="5.5" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA=</HashCode>
      <FileName>DataTypes\TupleDeclaration.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.UnaryAssignment">
    <Position X="25.25" Y="8.25" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\UnaryAssignment.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.UnaryCompoundExpression">
    <Position X="40.75" Y="8" Width="2.25" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAAAIAA=</HashCode>
      <FileName>DataTypes\UnaryCompoundExpression.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.VariableDeclaration">
    <Position X="27" Y="3.75" Width="1.75" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA=</HashCode>
      <FileName>DataTypes\VariableDeclaration.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Class Name="YALCompiler.DataTypes.WhileStatement">
    <Position X="29.75" Y="3.75" Width="1.5" />
    <TypeIdentifier>
      <HashCode>AAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</HashCode>
      <FileName>DataTypes\WhileStatement.cs</FileName>
    </TypeIdentifier>
  </Class>
  <Font Name="Segoe UI" Size="9" />
</ClassDiagram>