//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/rilar/Documents/GitHub/aau-p4-compiler/YALCompiler/YALCompiler/Grammar\YALGrammer.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class YALGrammerLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, EXTERNAL=19, ASYNC=20, AWAIT=21, RETURN=22, TYPE=23, IN=24, 
		OUT=25, REF=26, STRING=27, BOOLEAN=28, ID=29, POSITIVE_NUMBER=30, FLOAT=31, 
		TIMES=32, DIV=33, MOD=34, PLUS=35, MINUS=36, LSHIFT=37, RSHIFT=38, INCREMENT=39, 
		DECREMENT=40, LESS_THAN=41, LESS_THAN_OR_EQUAL=42, GREATER_THAN=43, GREATER_THAN_OR_EQUAL=44, 
		EQUALS=45, NOT_EQUAL=46, EQUAL=47, PLUS_EQUAL=48, MINUS_EQUAL=49, MULTIPLY_EQUAL=50, 
		DIVIDE_EQUAL=51, MODULO_EQUAL=52, BITWISE_NOT=53, LBRACKET=54, RBRACKET=55, 
		WHITESPACE=56, NEWLINE=57, COMMENT=58, LINE_COMMENT=59;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "LOWERCASE", "UPPERCASE", "DIGIT", "LETTER", "DOUBLE_QUOTATION_MARK", 
		"SINGLE_QUOTATION_MARK", "EXTERNAL", "ASYNC", "AWAIT", "RETURN", "TYPE", 
		"IN", "OUT", "REF", "STRING", "BOOLEAN", "ID", "POSITIVE_NUMBER", "FLOAT", 
		"TIMES", "DIV", "MOD", "PLUS", "MINUS", "LSHIFT", "RSHIFT", "INCREMENT", 
		"DECREMENT", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", 
		"EQUALS", "NOT_EQUAL", "EQUAL", "PLUS_EQUAL", "MINUS_EQUAL", "MULTIPLY_EQUAL", 
		"DIVIDE_EQUAL", "MODULO_EQUAL", "BITWISE_NOT", "LBRACKET", "RBRACKET", 
		"WHITESPACE", "NEWLINE", "COMMENT", "LINE_COMMENT"
	};


	public YALGrammerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public YALGrammerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "':'", "'('", "')'", "'{'", "'}'", "','", "'!'", "'&'", "'^'", 
		"'|'", "'&&'", "'||'", "'if'", "'else if'", "'else'", "'while'", "'for'", 
		"'external'", "'async'", "'await'", "'return'", null, "'in'", "'out'", 
		"'ref'", null, null, null, null, null, "'*'", "'/'", "'%'", "'+'", "'-'", 
		"'<<'", "'>>'", "'++'", "'--'", "'<'", "'<='", "'>'", "'>='", "'=='", 
		"'!='", "'='", "'+='", "'-='", "'*='", "'\\='", "'%='", "'~'", "'['", 
		"']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "EXTERNAL", "ASYNC", "AWAIT", 
		"RETURN", "TYPE", "IN", "OUT", "REF", "STRING", "BOOLEAN", "ID", "POSITIVE_NUMBER", 
		"FLOAT", "TIMES", "DIV", "MOD", "PLUS", "MINUS", "LSHIFT", "RSHIFT", "INCREMENT", 
		"DECREMENT", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", 
		"EQUALS", "NOT_EQUAL", "EQUAL", "PLUS_EQUAL", "MINUS_EQUAL", "MULTIPLY_EQUAL", 
		"DIVIDE_EQUAL", "MODULO_EQUAL", "BITWISE_NOT", "LBRACKET", "RBRACKET", 
		"WHITESPACE", "NEWLINE", "COMMENT", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "YALGrammer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static YALGrammerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,59,483,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,
		1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,
		13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,
		15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,
		19,1,20,1,20,1,21,1,21,3,21,194,8,21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,
		1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,298,8,28,1,
		29,1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,
		32,5,32,315,8,32,10,32,12,32,318,9,32,1,32,1,32,1,32,1,32,1,32,1,32,5,
		32,326,8,32,10,32,12,32,329,9,32,1,32,1,32,3,32,333,8,32,1,33,1,33,1,33,
		1,33,1,33,1,33,1,33,1,33,1,33,3,33,344,8,33,1,34,1,34,3,34,348,8,34,1,
		34,1,34,1,34,5,34,353,8,34,10,34,12,34,356,9,34,1,35,1,35,5,35,360,8,35,
		10,35,12,35,363,9,35,1,36,1,36,5,36,367,8,36,10,36,12,36,370,9,36,1,36,
		1,36,1,36,5,36,375,8,36,10,36,12,36,378,9,36,1,37,1,37,1,38,1,38,1,39,
		1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,
		1,45,1,45,1,45,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,50,
		1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,54,1,55,
		1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,
		1,61,4,61,442,8,61,11,61,12,61,443,1,61,1,61,1,62,3,62,449,8,62,1,62,1,
		62,4,62,453,8,62,11,62,12,62,454,1,62,1,62,1,63,1,63,1,63,1,63,5,63,463,
		8,63,10,63,12,63,466,9,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,
		5,64,477,8,64,10,64,12,64,480,9,64,1,64,1,64,3,316,327,464,0,65,1,1,3,
		2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
		31,16,33,17,35,18,37,0,39,0,41,0,43,0,45,0,47,0,49,19,51,20,53,21,55,22,
		57,23,59,24,61,25,63,26,65,27,67,28,69,29,71,30,73,31,75,32,77,33,79,34,
		81,35,83,36,85,37,87,38,89,39,91,40,93,41,95,42,97,43,99,44,101,45,103,
		46,105,47,107,48,109,49,111,50,113,51,115,52,117,53,119,54,121,55,123,
		56,125,57,127,58,129,59,1,0,5,1,0,97,122,1,0,65,90,1,0,48,57,2,0,9,9,32,
		32,2,0,10,10,13,13,508,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
		0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
		0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
		0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
		1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
		0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
		1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
		0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
		1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
		0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
		0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,
		0,0,0,0,129,1,0,0,0,1,131,1,0,0,0,3,133,1,0,0,0,5,135,1,0,0,0,7,137,1,
		0,0,0,9,139,1,0,0,0,11,141,1,0,0,0,13,143,1,0,0,0,15,145,1,0,0,0,17,147,
		1,0,0,0,19,149,1,0,0,0,21,151,1,0,0,0,23,153,1,0,0,0,25,156,1,0,0,0,27,
		159,1,0,0,0,29,162,1,0,0,0,31,170,1,0,0,0,33,175,1,0,0,0,35,181,1,0,0,
		0,37,185,1,0,0,0,39,187,1,0,0,0,41,189,1,0,0,0,43,193,1,0,0,0,45,195,1,
		0,0,0,47,197,1,0,0,0,49,199,1,0,0,0,51,208,1,0,0,0,53,214,1,0,0,0,55,220,
		1,0,0,0,57,297,1,0,0,0,59,299,1,0,0,0,61,302,1,0,0,0,63,306,1,0,0,0,65,
		332,1,0,0,0,67,343,1,0,0,0,69,347,1,0,0,0,71,357,1,0,0,0,73,364,1,0,0,
		0,75,379,1,0,0,0,77,381,1,0,0,0,79,383,1,0,0,0,81,385,1,0,0,0,83,387,1,
		0,0,0,85,389,1,0,0,0,87,392,1,0,0,0,89,395,1,0,0,0,91,398,1,0,0,0,93,401,
		1,0,0,0,95,403,1,0,0,0,97,406,1,0,0,0,99,408,1,0,0,0,101,411,1,0,0,0,103,
		414,1,0,0,0,105,417,1,0,0,0,107,419,1,0,0,0,109,422,1,0,0,0,111,425,1,
		0,0,0,113,428,1,0,0,0,115,431,1,0,0,0,117,434,1,0,0,0,119,436,1,0,0,0,
		121,438,1,0,0,0,123,441,1,0,0,0,125,452,1,0,0,0,127,458,1,0,0,0,129,472,
		1,0,0,0,131,132,5,59,0,0,132,2,1,0,0,0,133,134,5,58,0,0,134,4,1,0,0,0,
		135,136,5,40,0,0,136,6,1,0,0,0,137,138,5,41,0,0,138,8,1,0,0,0,139,140,
		5,123,0,0,140,10,1,0,0,0,141,142,5,125,0,0,142,12,1,0,0,0,143,144,5,44,
		0,0,144,14,1,0,0,0,145,146,5,33,0,0,146,16,1,0,0,0,147,148,5,38,0,0,148,
		18,1,0,0,0,149,150,5,94,0,0,150,20,1,0,0,0,151,152,5,124,0,0,152,22,1,
		0,0,0,153,154,5,38,0,0,154,155,5,38,0,0,155,24,1,0,0,0,156,157,5,124,0,
		0,157,158,5,124,0,0,158,26,1,0,0,0,159,160,5,105,0,0,160,161,5,102,0,0,
		161,28,1,0,0,0,162,163,5,101,0,0,163,164,5,108,0,0,164,165,5,115,0,0,165,
		166,5,101,0,0,166,167,5,32,0,0,167,168,5,105,0,0,168,169,5,102,0,0,169,
		30,1,0,0,0,170,171,5,101,0,0,171,172,5,108,0,0,172,173,5,115,0,0,173,174,
		5,101,0,0,174,32,1,0,0,0,175,176,5,119,0,0,176,177,5,104,0,0,177,178,5,
		105,0,0,178,179,5,108,0,0,179,180,5,101,0,0,180,34,1,0,0,0,181,182,5,102,
		0,0,182,183,5,111,0,0,183,184,5,114,0,0,184,36,1,0,0,0,185,186,7,0,0,0,
		186,38,1,0,0,0,187,188,7,1,0,0,188,40,1,0,0,0,189,190,7,2,0,0,190,42,1,
		0,0,0,191,194,3,37,18,0,192,194,3,39,19,0,193,191,1,0,0,0,193,192,1,0,
		0,0,194,44,1,0,0,0,195,196,5,34,0,0,196,46,1,0,0,0,197,198,5,39,0,0,198,
		48,1,0,0,0,199,200,5,101,0,0,200,201,5,120,0,0,201,202,5,116,0,0,202,203,
		5,101,0,0,203,204,5,114,0,0,204,205,5,110,0,0,205,206,5,97,0,0,206,207,
		5,108,0,0,207,50,1,0,0,0,208,209,5,97,0,0,209,210,5,115,0,0,210,211,5,
		121,0,0,211,212,5,110,0,0,212,213,5,99,0,0,213,52,1,0,0,0,214,215,5,97,
		0,0,215,216,5,119,0,0,216,217,5,97,0,0,217,218,5,105,0,0,218,219,5,116,
		0,0,219,54,1,0,0,0,220,221,5,114,0,0,221,222,5,101,0,0,222,223,5,116,0,
		0,223,224,5,117,0,0,224,225,5,114,0,0,225,226,5,110,0,0,226,56,1,0,0,0,
		227,228,5,105,0,0,228,229,5,110,0,0,229,230,5,116,0,0,230,298,5,56,0,0,
		231,232,5,105,0,0,232,233,5,110,0,0,233,234,5,116,0,0,234,235,5,49,0,0,
		235,298,5,54,0,0,236,237,5,105,0,0,237,238,5,110,0,0,238,239,5,116,0,0,
		239,240,5,51,0,0,240,298,5,50,0,0,241,242,5,105,0,0,242,243,5,110,0,0,
		243,244,5,116,0,0,244,245,5,54,0,0,245,298,5,52,0,0,246,247,5,117,0,0,
		247,248,5,105,0,0,248,249,5,110,0,0,249,250,5,116,0,0,250,298,5,56,0,0,
		251,252,5,117,0,0,252,253,5,105,0,0,253,254,5,110,0,0,254,255,5,116,0,
		0,255,256,5,49,0,0,256,298,5,54,0,0,257,258,5,117,0,0,258,259,5,105,0,
		0,259,260,5,110,0,0,260,261,5,116,0,0,261,262,5,51,0,0,262,298,5,50,0,
		0,263,264,5,117,0,0,264,265,5,105,0,0,265,266,5,110,0,0,266,267,5,116,
		0,0,267,268,5,54,0,0,268,298,5,52,0,0,269,270,5,102,0,0,270,271,5,108,
		0,0,271,272,5,111,0,0,272,273,5,97,0,0,273,274,5,116,0,0,274,275,5,51,
		0,0,275,298,5,50,0,0,276,277,5,102,0,0,277,278,5,108,0,0,278,279,5,111,
		0,0,279,280,5,97,0,0,280,281,5,116,0,0,281,282,5,54,0,0,282,298,5,52,0,
		0,283,284,5,99,0,0,284,285,5,104,0,0,285,286,5,97,0,0,286,298,5,114,0,
		0,287,288,5,115,0,0,288,289,5,116,0,0,289,290,5,114,0,0,290,291,5,105,
		0,0,291,292,5,110,0,0,292,298,5,103,0,0,293,294,5,98,0,0,294,295,5,111,
		0,0,295,296,5,111,0,0,296,298,5,108,0,0,297,227,1,0,0,0,297,231,1,0,0,
		0,297,236,1,0,0,0,297,241,1,0,0,0,297,246,1,0,0,0,297,251,1,0,0,0,297,
		257,1,0,0,0,297,263,1,0,0,0,297,269,1,0,0,0,297,276,1,0,0,0,297,283,1,
		0,0,0,297,287,1,0,0,0,297,293,1,0,0,0,298,58,1,0,0,0,299,300,5,105,0,0,
		300,301,5,110,0,0,301,60,1,0,0,0,302,303,5,111,0,0,303,304,5,117,0,0,304,
		305,5,116,0,0,305,62,1,0,0,0,306,307,5,114,0,0,307,308,5,101,0,0,308,309,
		5,102,0,0,309,64,1,0,0,0,310,316,3,47,23,0,311,312,5,92,0,0,312,315,3,
		47,23,0,313,315,9,0,0,0,314,311,1,0,0,0,314,313,1,0,0,0,315,318,1,0,0,
		0,316,317,1,0,0,0,316,314,1,0,0,0,317,319,1,0,0,0,318,316,1,0,0,0,319,
		320,3,47,23,0,320,333,1,0,0,0,321,327,3,45,22,0,322,323,5,92,0,0,323,326,
		3,45,22,0,324,326,9,0,0,0,325,322,1,0,0,0,325,324,1,0,0,0,326,329,1,0,
		0,0,327,328,1,0,0,0,327,325,1,0,0,0,328,330,1,0,0,0,329,327,1,0,0,0,330,
		331,3,45,22,0,331,333,1,0,0,0,332,310,1,0,0,0,332,321,1,0,0,0,333,66,1,
		0,0,0,334,335,5,116,0,0,335,336,5,114,0,0,336,337,5,117,0,0,337,344,5,
		101,0,0,338,339,5,102,0,0,339,340,5,97,0,0,340,341,5,108,0,0,341,342,5,
		115,0,0,342,344,5,101,0,0,343,334,1,0,0,0,343,338,1,0,0,0,344,68,1,0,0,
		0,345,348,3,43,21,0,346,348,5,95,0,0,347,345,1,0,0,0,347,346,1,0,0,0,348,
		354,1,0,0,0,349,353,3,43,21,0,350,353,3,41,20,0,351,353,5,95,0,0,352,349,
		1,0,0,0,352,350,1,0,0,0,352,351,1,0,0,0,353,356,1,0,0,0,354,352,1,0,0,
		0,354,355,1,0,0,0,355,70,1,0,0,0,356,354,1,0,0,0,357,361,3,41,20,0,358,
		360,3,41,20,0,359,358,1,0,0,0,360,363,1,0,0,0,361,359,1,0,0,0,361,362,
		1,0,0,0,362,72,1,0,0,0,363,361,1,0,0,0,364,368,3,41,20,0,365,367,3,41,
		20,0,366,365,1,0,0,0,367,370,1,0,0,0,368,366,1,0,0,0,368,369,1,0,0,0,369,
		371,1,0,0,0,370,368,1,0,0,0,371,372,5,46,0,0,372,376,3,41,20,0,373,375,
		3,41,20,0,374,373,1,0,0,0,375,378,1,0,0,0,376,374,1,0,0,0,376,377,1,0,
		0,0,377,74,1,0,0,0,378,376,1,0,0,0,379,380,5,42,0,0,380,76,1,0,0,0,381,
		382,5,47,0,0,382,78,1,0,0,0,383,384,5,37,0,0,384,80,1,0,0,0,385,386,5,
		43,0,0,386,82,1,0,0,0,387,388,5,45,0,0,388,84,1,0,0,0,389,390,5,60,0,0,
		390,391,5,60,0,0,391,86,1,0,0,0,392,393,5,62,0,0,393,394,5,62,0,0,394,
		88,1,0,0,0,395,396,5,43,0,0,396,397,5,43,0,0,397,90,1,0,0,0,398,399,5,
		45,0,0,399,400,5,45,0,0,400,92,1,0,0,0,401,402,5,60,0,0,402,94,1,0,0,0,
		403,404,5,60,0,0,404,405,5,61,0,0,405,96,1,0,0,0,406,407,5,62,0,0,407,
		98,1,0,0,0,408,409,5,62,0,0,409,410,5,61,0,0,410,100,1,0,0,0,411,412,5,
		61,0,0,412,413,5,61,0,0,413,102,1,0,0,0,414,415,5,33,0,0,415,416,5,61,
		0,0,416,104,1,0,0,0,417,418,5,61,0,0,418,106,1,0,0,0,419,420,5,43,0,0,
		420,421,5,61,0,0,421,108,1,0,0,0,422,423,5,45,0,0,423,424,5,61,0,0,424,
		110,1,0,0,0,425,426,5,42,0,0,426,427,5,61,0,0,427,112,1,0,0,0,428,429,
		5,92,0,0,429,430,5,61,0,0,430,114,1,0,0,0,431,432,5,37,0,0,432,433,5,61,
		0,0,433,116,1,0,0,0,434,435,5,126,0,0,435,118,1,0,0,0,436,437,5,91,0,0,
		437,120,1,0,0,0,438,439,5,93,0,0,439,122,1,0,0,0,440,442,7,3,0,0,441,440,
		1,0,0,0,442,443,1,0,0,0,443,441,1,0,0,0,443,444,1,0,0,0,444,445,1,0,0,
		0,445,446,6,61,0,0,446,124,1,0,0,0,447,449,5,13,0,0,448,447,1,0,0,0,448,
		449,1,0,0,0,449,450,1,0,0,0,450,453,5,10,0,0,451,453,5,13,0,0,452,448,
		1,0,0,0,452,451,1,0,0,0,453,454,1,0,0,0,454,452,1,0,0,0,454,455,1,0,0,
		0,455,456,1,0,0,0,456,457,6,62,0,0,457,126,1,0,0,0,458,459,5,47,0,0,459,
		460,5,42,0,0,460,464,1,0,0,0,461,463,9,0,0,0,462,461,1,0,0,0,463,466,1,
		0,0,0,464,465,1,0,0,0,464,462,1,0,0,0,465,467,1,0,0,0,466,464,1,0,0,0,
		467,468,5,42,0,0,468,469,5,47,0,0,469,470,1,0,0,0,470,471,6,63,0,0,471,
		128,1,0,0,0,472,473,5,47,0,0,473,474,5,47,0,0,474,478,1,0,0,0,475,477,
		8,4,0,0,476,475,1,0,0,0,477,480,1,0,0,0,478,476,1,0,0,0,478,479,1,0,0,
		0,479,481,1,0,0,0,480,478,1,0,0,0,481,482,6,64,0,0,482,130,1,0,0,0,21,
		0,193,297,314,316,325,327,332,343,347,352,354,361,368,376,443,448,452,
		454,464,478,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
