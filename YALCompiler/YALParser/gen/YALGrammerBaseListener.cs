//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/rilar/Documents/GitHub/aau-p4-compiler/YALCompiler/YALParser/Gammar\YALGrammer.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IYALGrammerListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class YALGrammerBaseListener : IYALGrammerListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] YALGrammerParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] YALGrammerParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] YALGrammerParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] YALGrammerParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.formalInputParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalInputParams([NotNull] YALGrammerParser.FormalInputParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.formalInputParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalInputParams([NotNull] YALGrammerParser.FormalInputParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.formalOutputParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalOutputParams([NotNull] YALGrammerParser.FormalOutputParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.formalOutputParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalOutputParams([NotNull] YALGrammerParser.FormalOutputParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.statementBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementBlock([NotNull] YALGrammerParser.StatementBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.statementBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementBlock([NotNull] YALGrammerParser.StatementBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.singleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleStatement([NotNull] YALGrammerParser.SingleStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.singleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleStatement([NotNull] YALGrammerParser.SingleStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStatement([NotNull] YALGrammerParser.BlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStatement([NotNull] YALGrammerParser.BlockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleVariableDeclarationFormat</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleVariableDeclarationFormat([NotNull] YALGrammerParser.SimpleVariableDeclarationFormatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleVariableDeclarationFormat</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleVariableDeclarationFormat([NotNull] YALGrammerParser.SimpleVariableDeclarationFormatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TupleVariableDeclaration</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleVariableDeclaration([NotNull] YALGrammerParser.TupleVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TupleVariableDeclaration</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleVariableDeclaration([NotNull] YALGrammerParser.TupleVariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayDeclaration</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclarationFormat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayDeclaration([NotNull] YALGrammerParser.ArrayDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayDeclaration</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclarationFormat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayDeclaration([NotNull] YALGrammerParser.ArrayDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleVariableDeclaration</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclarationFormat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleVariableDeclaration([NotNull] YALGrammerParser.SimpleVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleVariableDeclaration</c>
	/// labeled alternative in <see cref="YALGrammerParser.variableDeclarationFormat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleVariableDeclaration([NotNull] YALGrammerParser.SimpleVariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDeclaration([NotNull] YALGrammerParser.EnumDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDeclaration([NotNull] YALGrammerParser.EnumDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] YALGrammerParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] YALGrammerParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdAssignment([NotNull] YALGrammerParser.IdAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdAssignment([NotNull] YALGrammerParser.IdAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdAdditionAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdAdditionAssignment([NotNull] YALGrammerParser.IdAdditionAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdAdditionAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdAdditionAssignment([NotNull] YALGrammerParser.IdAdditionAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdSubtractionAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdSubtractionAssignment([NotNull] YALGrammerParser.IdSubtractionAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdSubtractionAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdSubtractionAssignment([NotNull] YALGrammerParser.IdSubtractionAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdPostIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdPostIncrement([NotNull] YALGrammerParser.IdPostIncrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdPostIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdPostIncrement([NotNull] YALGrammerParser.IdPostIncrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdPostDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdPostDecrement([NotNull] YALGrammerParser.IdPostDecrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdPostDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdPostDecrement([NotNull] YALGrammerParser.IdPostDecrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdPreDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdPreDecrement([NotNull] YALGrammerParser.IdPreDecrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdPreDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdPreDecrement([NotNull] YALGrammerParser.IdPreDecrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdPreIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdPreIncrement([NotNull] YALGrammerParser.IdPreIncrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdPreIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.simpleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdPreIncrement([NotNull] YALGrammerParser.IdPreIncrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.declarationAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationAssignment([NotNull] YALGrammerParser.DeclarationAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.declarationAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationAssignment([NotNull] YALGrammerParser.DeclarationAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.tupleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleAssignment([NotNull] YALGrammerParser.TupleAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.tupleAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleAssignment([NotNull] YALGrammerParser.TupleAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.tupleDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleDeclaration([NotNull] YALGrammerParser.TupleDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.tupleDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleDeclaration([NotNull] YALGrammerParser.TupleDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.tupleId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleId([NotNull] YALGrammerParser.TupleIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.tupleId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleId([NotNull] YALGrammerParser.TupleIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpression([NotNull] YALGrammerParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpression([NotNull] YALGrammerParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PreIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreIncrement([NotNull] YALGrammerParser.PreIncrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PreIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreIncrement([NotNull] YALGrammerParser.PreIncrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplication([NotNull] YALGrammerParser.MultiplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplication([NotNull] YALGrammerParser.MultiplicationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Addition</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddition([NotNull] YALGrammerParser.AdditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Addition</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddition([NotNull] YALGrammerParser.AdditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Variable</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] YALGrammerParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Variable</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] YALGrammerParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModulo([NotNull] YALGrammerParser.ModuloContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModulo([NotNull] YALGrammerParser.ModuloContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableAssignment([NotNull] YALGrammerParser.VariableAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableAssignment</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableAssignment([NotNull] YALGrammerParser.VariableAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PostDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostDecrement([NotNull] YALGrammerParser.PostDecrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PostDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostDecrement([NotNull] YALGrammerParser.PostDecrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RightShift</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightShift([NotNull] YALGrammerParser.RightShiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RightShift</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightShift([NotNull] YALGrammerParser.RightShiftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LeftShift</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftShift([NotNull] YALGrammerParser.LeftShiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LeftShift</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftShift([NotNull] YALGrammerParser.LeftShiftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteral([NotNull] YALGrammerParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteral([NotNull] YALGrammerParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AsyncFunctionCallExpression</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsyncFunctionCallExpression([NotNull] YALGrammerParser.AsyncFunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AsyncFunctionCallExpression</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsyncFunctionCallExpression([NotNull] YALGrammerParser.AsyncFunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionCallExpression</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] YALGrammerParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionCallExpression</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] YALGrammerParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Subtraction</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtraction([NotNull] YALGrammerParser.SubtractionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Subtraction</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtraction([NotNull] YALGrammerParser.SubtractionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] YALGrammerParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] YALGrammerParser.StringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BitwiseXor</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseXor([NotNull] YALGrammerParser.BitwiseXorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BitwiseXor</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseXor([NotNull] YALGrammerParser.BitwiseXorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BitwiseOr</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseOr([NotNull] YALGrammerParser.BitwiseOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BitwiseOr</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseOr([NotNull] YALGrammerParser.BitwiseOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BitwiseAnd</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseAnd([NotNull] YALGrammerParser.BitwiseAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BitwiseAnd</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseAnd([NotNull] YALGrammerParser.BitwiseAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivision([NotNull] YALGrammerParser.DivisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivision([NotNull] YALGrammerParser.DivisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PostIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostIncrement([NotNull] YALGrammerParser.PostIncrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PostIncrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostIncrement([NotNull] YALGrammerParser.PostIncrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PreDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreDecrement([NotNull] YALGrammerParser.PreDecrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PreDecrement</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreDecrement([NotNull] YALGrammerParser.PreDecrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberLiteral([NotNull] YALGrammerParser.NumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberLiteral([NotNull] YALGrammerParser.NumberLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] YALGrammerParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] YALGrammerParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.actualInputParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActualInputParams([NotNull] YALGrammerParser.ActualInputParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.actualInputParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActualInputParams([NotNull] YALGrammerParser.ActualInputParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot([NotNull] YALGrammerParser.NotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot([NotNull] YALGrammerParser.NotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLessThan([NotNull] YALGrammerParser.LessThanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLessThan([NotNull] YALGrammerParser.LessThanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Equals</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquals([NotNull] YALGrammerParser.EqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Equals</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquals([NotNull] YALGrammerParser.EqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr([NotNull] YALGrammerParser.OrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr([NotNull] YALGrammerParser.OrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesizedPredicate</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedPredicate([NotNull] YALGrammerParser.ParenthesizedPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesizedPredicate</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedPredicate([NotNull] YALGrammerParser.ParenthesizedPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LessThanOrEqual</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLessThanOrEqual([NotNull] YALGrammerParser.LessThanOrEqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LessThanOrEqual</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLessThanOrEqual([NotNull] YALGrammerParser.LessThanOrEqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGreaterThan([NotNull] YALGrammerParser.GreaterThanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGreaterThan([NotNull] YALGrammerParser.GreaterThanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteral([NotNull] YALGrammerParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanLiteral</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteral([NotNull] YALGrammerParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd([NotNull] YALGrammerParser.AndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd([NotNull] YALGrammerParser.AndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterThanOrEqual</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGreaterThanOrEqual([NotNull] YALGrammerParser.GreaterThanOrEqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterThanOrEqual</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGreaterThanOrEqual([NotNull] YALGrammerParser.GreaterThanOrEqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NotEquals</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotEquals([NotNull] YALGrammerParser.NotEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NotEquals</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotEquals([NotNull] YALGrammerParser.NotEqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionPredicate</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionPredicate([NotNull] YALGrammerParser.ExpressionPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionPredicate</c>
	/// labeled alternative in <see cref="YALGrammerParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionPredicate([NotNull] YALGrammerParser.ExpressionPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] YALGrammerParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] YALGrammerParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] YALGrammerParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] YALGrammerParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YALGrammerParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] YALGrammerParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YALGrammerParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] YALGrammerParser.ForStatementContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
